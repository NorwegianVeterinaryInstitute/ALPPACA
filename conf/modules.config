/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        Config file for defining module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/


process {
	withName: 'FASTANI' {
		publishDir = [
				path: 		{ "${params.out_dir}/versions" },
				mode: 		params.publish_dir_mode,
				pattern:	"fastani.version"
		]
	}
	withName: 'GUBBINS' {
		publishDir = [
                        [
                                path:           { "${params.out_dir}/versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "gubbins.version"
                        ],
			[
				path:		{ "${params.out_dir}/logs" },
				mode: 		params.publish_dir_mode,
				pattern: 	"gubbins.log"
			],
			[
				path: 		{ "${params.out_dir}/results" },
				mode: 		params.publish_dir_mode,
				pattern: 	"*filtered_polymorphic_sites.fasta",
				saveAs: 	{"GUBBINS_filtered_alignment.aln"}
			],
                	[
                        	path: 		{ "${params.out_dir}/results" },
                        	mode: 		params.publish_dir_mode,
                        	pattern: 	"*per_branch_statistics.csv",
				saveAs: 	{"GUBBINS_statistics.txt"}
                	]
		]
	}
        withName: 'IQTREE' {
                publishDir = [
                        [
                                path:           { "${params.out_dir}/versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "iqtree.version"
                        ],
			[
                                path:           { "${params.out_dir}/logs" },
                                mode:           params.publish_dir_mode,
                                pattern:        "*.log"
                        ],
                        [
                                path:           { "${params.out_dir}/results" },
                                mode:           params.publish_dir_mode,
                                pattern:        "*.contree",
                                saveAs:         { "IQTREE_tree.phylo" }
                        ],
                        [
                                path:           { "${params.out_dir}/results" },
                                mode:           params.publish_dir_mode,
                                pattern:        "*.iqtree",
                                saveAs:         { "IQTREE_results.txt" }
                        ],
                        [
                                path:           { "${params.out_dir}/results" },
                                mode:           params.publish_dir_mode,
                                pattern:        "*.alninfo",
                                saveAs:         { "IQTREE_alninfo.txt" }
                        ],
                        [
                                path:           { "${params.out_dir}/results" },
                                mode:           params.publish_dir_mode,
                                pattern:        "*splits.nex",
                                saveAs:         { "IQTREE_splits.nex" }
                        ],
                        [
                                path:           { "${params.out_dir}/results" },
                                mode:           params.publish_dir_mode,
                                pattern:        "*.ufboot",
                                saveAs:         { "IQTREE_bootstrap_trees.ufboot" }
                        ],
                        [
                                path:           { "${params.out_dir}/results" },
                                mode:           params.publish_dir_mode,
                                pattern:        "*.treefile",
                                saveAs:         { "IQTREE_ml_tree.phylo" }
                        ]
                ]
        }
	withName: 'IQTREE_FCONST' {
		publishDir = [
                        [
                                path:           { "${params.out_dir}/versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "iqtree.version"
                        ],
                	[
                        	path:		{ "${params.out_dir}/logs" },
                        	mode: 		params.publish_dir_mode,
                        	pattern: 	"*.log"
                	],
                        [
                                path: 		{ "${params.out_dir}/results" },
                                mode: 		params.publish_dir_mode,
                                pattern: 	"*.contree",
				saveAs: 	{ "IQTREE_tree.phylo" }
                        ],
                        [
                                path: 		{ "${params.out_dir}/results" },
                                mode: 		params.publish_dir_mode,
                                pattern: 	"*.iqtree",
				saveAs: 	{ "IQTREE_results.txt" }
                        ],
                        [
                                path: 		{ "${params.out_dir}/results" },
                                mode: 		params.publish_dir_mode,
                                pattern: 	"*.alninfo",
				saveAs: 	{ "IQTREE_alninfo.txt" }
                        ],
                        [
                                path: 		{ "${params.out_dir}/results" },
                                mode: 		params.publish_dir_mode,
                                pattern: 	"*splits.nex",
				saveAs: 	{ "IQTREE_splits.nex" }
                        ],
                        [
                                path: 		{ "${params.out_dir}/results" },
                                mode: 		params.publish_dir_mode,
                                pattern: 	"*.ufboot",
				saveAs: 	{ "IQTREE_bootstrap_trees.ufboot" }
                        ],
                        [
                                path: 		{ "${params.out_dir}/results" },
                                mode: 		params.publish_dir_mode,
                                pattern: 	"*.treefile",
				saveAs: 	{ "IQTREE_ml_tree.phylo" }
                        ]
		]
	}
	withName: 'MASKRC' {
		publishDir = [
                        [
                                path:           { "${params.out_dir}/versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "maskrc-svg.version"
                        ],
                        [
                                path:           { "${params.out_dir}/logs" },
                                mode:           params.publish_dir_mode,
                                pattern:        "*.log"
                        ],
                        [
                                path:           { "${params.out_dir}/results" },
                                mode:           params.publish_dir_mode,
                                pattern:        "masked.aln",
				saveAs:		{ "MASKRC_masked_alignment.aln" }
                        ],
                        [
                                path:           { "${params.out_dir}/results" },
                                mode:           params.publish_dir_mode,
                                pattern:        "recombinant_regions",
				saveAs:		{ "MASKRC_recombinant_regions.txt" }
                        ],
                        [
                                path:           { "${params.out_dir}/results" },
                                mode:           params.publish_dir_mode,
                                pattern:        "recombinant_plot",
				saveAs:		{ "MASKRC_recombinant_plot.svg" }
                        ]
		]
	}
	withName: 'PANAROO_QC' {
		publishDir = [
                        [
                                path:           { "${params.out_dir}/logs" },
                                mode:           params.publish_dir_mode,
                                pattern:        "panaroo_qc.log",
                        ],
                        [
                                path:           { "${params.out_dir}/results" },
                                mode:           params.publish_dir_mode,
                                pattern:        "mash_dist.txt",
				saveAs:		{ "PANAROO_mashdist.txt" }
                        ],
                        [
                                path:           { "${params.out_dir}/results" },
                                mode:           params.publish_dir_mode,
                                pattern:        "*png",
                        ],
		]
	}
	withName: 'PANAROO_PANGENOME' {
		publishDir = [
                        [
                                path:           { "${params.out_dir}/versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "panaroo.version"
                        ],
                        [
                                path:           { "${params.out_dir}/logs" },
                                mode:           params.publish_dir_mode,
                                pattern:        "panaroo_pangenome.log",
                        ],
                        [
                                path:           { "${params.out_dir}/results" },
                                mode:           params.publish_dir_mode,
                                pattern:        "summary_statistics.txt",
				saveAs:		{ "PANAROO_pangenome_results.txt" }
                        ],
                        [
                                path:           { "${params.out_dir}/results" },
                                mode:           params.publish_dir_mode,
                                pattern:        "core_gene_alignment.aln",
				saveAs:		{ "PANAROO_core_gene_alignment.aln" }
                        ]
		]
	}
	withName: 'PARSNP' {
		publishDir = [
                        [
                                path:           { "${params.out_dir}/versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "parsnp.version"
                        ],
                        [
                                path:           { "${params.out_dir}/logs" },
                                mode:           params.publish_dir_mode,
                                pattern:        "parsnp.log",
                        ],
                        [
                                path:           { "${params.out_dir}/results" },
                                mode:           params.publish_dir_mode,
                                pattern:        "parsnpAligner.log",
				saveAs:		{ "PARSNP_results.txt" }
                        ],
                        [
                                path:           { "${params.out_dir}/results" },
                                mode:           params.publish_dir_mode,
                                pattern:        "parsnp.ggr",
				saveAs:		{ "PARSNP_gingr_archive.ggr" }
                        ],
                        [
                                path:           { "${params.out_dir}/results" },
                                mode:           params.publish_dir_mode,
                                pattern:        "parsnp_alignment.fasta",
				saveAs:		{ "PARSNP_alignment.fasta" }
                        ]
		]
	}
	withName: 'PROKKA' {
		publishDir = [
                                path:           { "${params.out_dir}/versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "prokka.version"
		]
	}
	withName: 'REPORT_ANI' {
		publishDir = [
			[
				path:		{ "${params.out_dir}/results" },
				mode:		params.publish_dir_mode,
				pattern:	"*html"
			],
			[
				path:		{ "${params.out_dir}/results" },
				mode:		params.publish_dir_mode,
				pattern:	"FASTANI_cleaned.txt"
			]
		]
	}
	withName: 'REPORT_CORE_GENOME' {
		publishDir = [
                                path:           { "${params.out_dir}/results" },
                                mode:           params.publish_dir_mode,
                                pattern:        "*html"
		]
	}
	withName: 'REPORT_CORE_GENE' {
                publishDir = [
                                path:           { "${params.out_dir}/results" },
                                mode:           params.publish_dir_mode,
                                pattern:        "*html"
                ]
        }
	withName: 'REPORT_MAPPING' {
                publishDir = [
                                path:           { "${params.out_dir}/results" },
                                mode:           params.publish_dir_mode,
                                pattern:        "*html"
                ]
        }
	withName: 'DEDUPLICATE' {
		publishDir = [
                        [
                                path:           { "${params.out_dir}/versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "seqkit.version"
                        ],
                        [
                                path:           { "${params.out_dir}/logs" },
                                mode:           params.publish_dir_mode,
                                pattern:        "*log",
                        ],
                        [
                                path:           { "${params.out_dir}/results" },
                                mode:           params.publish_dir_mode,
                                pattern:        "seqkit_deduplicated.fasta",
				saveAs:		{ "SEQKIT_deduplicated_alignment.fasta" }
                        ],
                        [
                                path:           { "${params.out_dir}/results" },
                                mode:           params.publish_dir_mode,
                                pattern:        "seqkit_list_duplicated",
				saveAs:		{ "SEQKIT_duplicated_list.txt" }
                        ],
                        [
                                path:           { "${params.out_dir}/results" },
                                mode:           params.publish_dir_mode,
                                pattern:        "seqkit_duplicated_seq",
				saveAs:		{ "SEQKIT_duplicated_sequences.fasta" }
                        ]
		]
	}
	withName: 'SNIPPY' {
		publishDir = [
                        [
                                path:           { "${params.out_dir}/versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "snippy.version"
                        ],
                        [
                                path:           { "${params.out_dir}/logs" },
                                mode:           params.publish_dir_mode,
                                pattern:        "snippy.log",
                        ],
                        [
                                path:           { "${params.out_dir}/results" },
                                mode:           params.publish_dir_mode,
                                pattern:        "core.full.aln",
				saveAs:		{ "SNIPPY_alignment.aln" }
                        ],
                        [
                                path:           { "${params.out_dir}/results" },
                                mode:           params.publish_dir_mode,
                                pattern:        "core.txt",
				saveAs:		{ "SNIPPY_results.txt" }
                        ]
		]
	}
	withName: 'SNPDIST' {
		publishDir = [
                        [
                                path:           { "${params.out_dir}/versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "snp-dists.version"
                        ],
			[
                                path:           { "${params.out_dir}/results" },
                                mode:           params.publish_dir_mode,
                                pattern:        "snp_dists.tab",
				saveAs:		{ "SNPDIST_results.txt" }
			]
		]
	}
	withName: 'SNPSITES' {
		publishDir = [
                        [
                                path:           { "${params.out_dir}/versions" },
                                mode:           params.publish_dir_mode,
                                pattern:        "snp-sites.version"
                        ],
                        [
                                path:           { "${params.out_dir}/logs" },
                                mode:           params.publish_dir_mode,
                                pattern:        "snp_sites.log",
                        ],
                        [
                                path:           { "${params.out_dir}/results" },
                                mode:           params.publish_dir_mode,
                                pattern:        "snp_sites_alignment.aln",
				saveAs:		{ "SNPSITES_alignment.aln" }
                        ]
		]
	}
}
