// -----------------------------------------------
// -----------------------------------------------
// ||        ALPPACA CONFIGURATION FILE         ||
// -----------------------------------------------
// -----------------------------------------------
// This is the configuration file where users make
// necessary changes for their analysis.

// -----------------------------------------------
// |             WORKFLOW SELECTION              |
// -----------------------------------------------
// Which workflow do you want to run?
// Options: core_gene, core_genome, mapping
params.track="mapping"

// -----------------------------------------------
// |                   INPUT                     |
// -----------------------------------------------
// For the workflows core_gene and core_genome,
// specify full path to the input assemblies with
// a "*" wildcard and the suffix (e.g. "*fasta")
params.assemblies="/cluster/projects/nn9305k/active/hkaspersen/Projects/NEXTFLOW/testdata/test_assemblies/*fasta"

// For the workflow mapping, specify full path
// to the input reads, using wildcard and suffix
// to match both forward and reverse files.
params.reads="/cluster/projects/nn9305k/active/hkaspersen/Projects/NEXTFLOW/testdata/test_reads/*.fastq.gz"

// -----------------------------------------------
// |         WORKFLOW-SPECIFIC OPTIONS           |
// -----------------------------------------------
// Depending on the workflow selection, not all
// options here are relevant. Unused options can
// be left blank or as-is.
//
// WORKFLOW core_gene
// -----------------------------------------------
// Prokka
// Any additional options for Prokka can be added
// here, written as-is from the Prokka
// documentation. The example shows the --proteins
// options usually used if you want to prioritize 
// annotations from a specific genome
params.prokka_additional="--proteins /cluster/projects/nn9305k/active/hkaspersen/Projects/KG-VET_Swine/references/NTUH-K2044/GCF_000009885.1_ASM988v1_genomic.gbk"

// Panaroo
// Path to reference database used in Panaroo, and
// which clean mode to use in the analysis
params.refdb="/cluster/projects/nn9305k/genome_references/panaroo_refs/refseq.genomes.k21s1000.msh"
params.clean_mode="sensitive"

// WORKFLOW core_genome
// -----------------------------------------------
// ParSNP
// Which assembly will be used as a reference? 
// Either give full path to the assembly, or
// set it to "!" to make a random assembly from the 
// input assemblies the reference (this will make 
// it duplicated in the results)
params.parsnp_ref="!"

// WORKFLOW mapping
// -----------------------------------------------
// Snippy
// Provide full path to the reference used for
// mapping. Also, give the shared suffix for the
// forward and reverse files in R1 and R2. Lastly,
// provide the suffix of the R1 files, so the
// program can get the correct sample ID for both
// reads
params.snippyref="/cluster/projects/nn9305k/active/hkaspersen/Projects/KG-VET_Swine/references/NTUH-K2044/GCF_000009885.1_ASM988v1_genomic.fna"
params.R1="*1.fastq.gz"
params.R2="*2.fastq.gz"
params.suffix="_1.fastq.gz"

// -----------------------------------------------
// |               GENERAL OPTIONS               |
// -----------------------------------------------
// These are the options that are used in all three
// workflows.

// Seqkit
// This option will deduplicate identical sequences
// in the multiple alignment, reducing runtime and
// bias.
params.deduplicate=false

// Snp-sites
// This option will filter out constant sites from 
// the multiple alignment, and will reduce runtime 
// for the phylogenetic analysis. The constant site 
// distribution will be supplied to IQTree to 
// ensure accuracy.
params.filter_snps=true

// Gubbins
// These options select which treebuilder to use
// with Gubbins, and which model of evolution to
// apply to the analysis.
params.treebuilder="raxml"
params.gubbinsmodel="GTRGAMMA"

// IQTree
// These options specify the run options in IQTree.
// Note: changing some of these options may increase
// runtime drastically! If you want to use Model
// finder plus, specify "mfp" in the iqtree_model
// parameter. The mset and cmax options reduce the 
// number of models tested when using mfp. The
// bootstrap parameter specifies the number of
// Ultrafast bootstrapping rounds. The outgroup 
// parameter specifies the name of the sample you
// want to use as outgroup (leave blank if not used).
params.iqtree_model="GTR+I+F"
params.mset="HKY,GTR,SYM"
params.cmax="6"
params.bootstrap="1000"
params.outgroup=""
